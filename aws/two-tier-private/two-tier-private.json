{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Install two servers and fronted by PANW Firewall (sample-cft).",

 "Parameters": {
    "BootstrapBucketName":{
        "Description": "Bucket name for FW bootstrap configuration",
        "Type": "String"
    },
    "ServerKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the FW (Hint: You MUST have its private key)",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "FWLicenseType": {
      "Type": "String",
      "Default": "Bundle1",
      "AllowedValues": [
        "Bundle1",
        "Bundle2",
        "BYOL"
      ],
      "Description": "Enter the license type for the Firewall"
    },
    "VpcAz": {
        "Type": "List<AWS::EC2::AvailabilityZone::Name>",
        "Description": "Select 1 AZ"
    }
  },

  "Mappings": {
    "PANFWRegionMap" : {
      "us-east-1"  : {"Bundle1" : "ami-ce01c0b3", "Bundle2" : "ami-bffd3cc2", "BYOL" : "ami-a2fa3bdf"},
      "us-east-2"  : {"Bundle1" : "ami-10f3c575", "Bundle2" : "ami-9ef3c5fb", "BYOL" : "ami-11e1d774"},
      "us-west-1"  : {"Bundle1" : "ami-235b4f43", "Bundle2" : "ami-854551e5", "BYOL" : "ami-a95b4fc9"},
      "us-west-2"  : {"Bundle1" : "ami-8a22b3f2", "Bundle2" : "ami-9a29b8e2", "BYOL" : "ami-d424b5ac"},
      "ca-central-1"  : {"Bundle1" : "ami-dd0582b9", "Bundle2" : "ami-57048333", "BYOL" : "ami-64038400"},
      "eu-central-1"  : {"Bundle1" : "ami-1bbdd574", "Bundle2" : "ami-1ebdd571", "BYOL" : "ami-55bfd73a"},
      "eu-west-1"  : {"Bundle1" : "ami-edb0fe94", "Bundle2" : "ami-1fb1ff66", "BYOL" : "ami-62b5fb1b"},
      "eu-west-2"  : {"Bundle1" : "ami-f46a8d93", "Bundle2" : "ami-c4688fa3", "BYOL" : "ami-876a8de0"},
      "ap-southeast-1"  : {"Bundle1" : "ami-55bced29", "Bundle2" : "ami-36bdec4a", "BYOL" : "ami-27baeb5b"},
      "ap-southeast-2"  : {"Bundle1" : "ami-aed112cc", "Bundle2" : "ami-add013cf", "BYOL" : "ami-00d61562"},
      "ap-northeast-2"  : {"Bundle1" : "ami-4eb81420", "Bundle2" : "ami-a8bf13c6", "BYOL" : "ami-49bd1127"},
      "ap-northeast-1"  : {"Bundle1" : "ami-39662d5f", "Bundle2" : "ami-75652e13", "BYOL" : "ami-57662d31"},
      "ap-south-1"  : {"Bundle1" : "ami-d385dcbc", "Bundle2" : "ami-ee80d981", "BYOL" : "ami-e780d988"},
      "sa-east-1"  : {"Bundle1" : "ami-9e0154f2", "Bundle2" : "ami-d80653b4", "BYOL" : "ami-9c0154f0"}
    },

    "UbuntuRegionMap" : {
        "us-west-2"      :  { "AMI": "ami-efd0428f" },
        "ap-northeast-1" :  { "AMI": "ami-afb09dc8" },
        "us-west-1"      :  { "AMI": "ami-2afbde4a" },
        "ap-northeast-2" :  { "AMI": "ami-66e33108" },
        "ap-southeast-1" :  { "AMI": "ami-8fcc75ec" },
        "ap-southeast-2" :  { "AMI": "ami-96666ff5" },
        "eu-central-1"   :  { "AMI": "ami-060cde69" },
        "eu-west-1"      :  { "AMI": "ami-a8d2d7ce" },
        "eu-west-2"      :  { "AMI": "ami-f1d7c395" },
        "sa-east-1"      :  { "AMI": "ami-4090f22c" },
        "us-east-1"      :  { "AMI": "ami-80861296" },
        "us-east-2"      :  { "AMI": "ami-618fab04" },
        "ca-central-1"   :  { "AMI": "ami-b3d965d7" },
        "ap-south-1"     :  { "AMI": "ami-c2ee9dad" }
    }
  },

  "Resources": {
    "BootstrapRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [ {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "ec2.amazonaws.com"
                    },
                "Action": "sts:AssumeRole"
                } ]
            },
            "Path":"/",
            "Policies": [ {
                "PolicyName" : "BootstrapRolePolicy",
                "PolicyDocument": {
                    "Version" : "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Action": "s3:ListBucket",
                         "Resource": { "Fn::Join" : ["", [ "arn:aws:s3:::", { "Ref" : "BootstrapBucketName" }]]}
                    },
                    {
                        "Effect": "Allow",
                        "Action": "s3:GetObject",
                         "Resource": { "Fn::Join" : ["", [ "arn:aws:s3:::", { "Ref" : "BootstrapBucketName" } , "/*" ]]}
                    }]
                }
            }]
        }
    },
    "BootstrapInstanceProfile":{
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": [ {
              "Ref": "BootstrapRole"
            }]
        }
    },

    "NewVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [{ "Key": "Name", "Value": "PAN Sample CFT" }]
      }
    },

    "NewDBSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "VpcId": {"Ref": "NewVPC"},
        "AvailabilityZone": { "Fn::Select" : [ "0", {"Ref" : "VpcAz"} ] },
        "Tags": [{ "Key": "Name", "Value": "PAN Sample CFT" }]
      },
      "DependsOn": "NewVPC"
    },

    "NewPublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {"Ref": "NewVPC"},
        "AvailabilityZone": { "Fn::Select" : [ "0", {"Ref" : "VpcAz"} ] },
        "Tags": [{ "Key": "Name", "Value": "PAN Sample CFT" }]
      },
      "DependsOn": [ "NewVPC", "NewDBSubnet" ]
    },

    "NewWebSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": { "Fn::Select" : [ "0", {"Ref" : "VpcAz"} ] },
        "VpcId": {"Ref": "NewVPC"},
        "Tags": [{ "Key": "Name", "Value": "PAN Sample CFT" }]
      },
      "DependsOn":[ "NewVPC", "NewDBSubnet" ]
    },

    "igweb3def8e": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{ "Key": "Name", "Value": "PAN Sample CFT" }]
      }
    },

    "dopt21c7d043": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "us-west-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },

    "aclb765d6d2": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "NewVPC"}
      }
    },

    "rtb059a2460": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "NewVPC"}
      }
    },

    "rtb049a2461": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "NewVPC"}
      }
    },

    "FWManagementNetworkInterface": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "AWS FW1 MGMT",
        "SubnetId": {"Ref": "NewPublicSubnet"},
        "SourceDestCheck": "false",
        "PrivateIpAddresses": [
          {
            "PrivateIpAddress": "10.0.0.99",
            "Primary": "true"
          }
        ],
        "GroupSet": [{"Ref": "sgWideOpen"}],
        "Tags": [{"Key": "Name","Value": "WP AWS FW1 MGMT"}]
      },
      "DependsOn": [ "sgWideOpen" ]
    },

    "FWPublicNetworkInterface": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "AWS FW1 E1/1",
        "SubnetId": {"Ref": "NewPublicSubnet"},
        "SourceDestCheck": "false",
        "PrivateIpAddresses": [
          {
            "PrivateIpAddress": "10.0.0.100",
            "Primary": "true"
          }
        ],
        "GroupSet": [{"Ref": "sgWideOpen"}],
        "Tags": [{"Key": "Name","Value": "WP AWS FW1 E1/1"}]
      },
      "DependsOn": [ "sgWideOpen" ]
    },

    "FWPrivate12NetworkInterface": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "AWS FW1 E1/2",
        "SubnetId": {"Ref": "NewWebSubnet"},
        "SourceDestCheck": "false",
        "PrivateIpAddresses": [
          {
            "PrivateIpAddress": "10.0.1.11",
            "Primary": "true"
          }
        ],
        "GroupSet": [{"Ref": "sgWideOpen"}],
        "Tags": [{"Key": "Name","Value": "WP AWS FW1 E1/2"}]
      },
      "DependsOn": [ "sgWideOpen" ]
    },

    "FWPrivate13NetworkInterface": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "AWS FW1 E1/3",
        "SubnetId": {"Ref": "NewDBSubnet"},
        "SourceDestCheck": "false",
        "PrivateIpAddresses": [
          {
            "PrivateIpAddress": "10.0.2.11",
            "Primary": "true"
          }
        ],
        "GroupSet": [{"Ref": "sgWideOpen"}],
        "Tags": [{"Key": "Name", "Value": "WP AWS FW1 E1/3"}]
      },
      "DependsOn": [ "sgWideOpen" ]
    },

    "sgWideOpen": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Wide open security group",
        "VpcId": {"Ref": "NewVPC"},
         "Tags": [{"Key": "Name","Value": "Lab External SG"}],
        "SecurityGroupIngress" : [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress" : [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
          ]
      }
    },

    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclb765d6d2"
        }
      }
    },

    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclb765d6d2"
        }
      }
    },

    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {"Ref": "aclb765d6d2"},
        "SubnetId": {"Ref": "NewDBSubnet"}
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {"Ref": "aclb765d6d2"},
        "SubnetId": {"Ref": "NewPublicSubnet"}
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {"Ref": "aclb765d6d2"},
        "SubnetId": {"Ref": "NewWebSubnet"}
      }
    },

    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {"Ref": "NewVPC"},
        "InternetGatewayId": {"Ref": "igweb3def8e"}
      }
    },

    "subnetroute2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref": "rtb049a2461"},
        "SubnetId": {"Ref": "NewPublicSubnet"}
      }
    },

    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {"Ref": "rtb059a2460"},
        "GatewayId": {"Ref": "igweb3def8e"}
      },
      "DependsOn": "gw1"
    },

    "route2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {"Ref": "rtb049a2461"},
        "GatewayId": {"Ref": "igweb3def8e"}
      },
      "DependsOn": "gw1"
    },

    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {"Ref": "NewVPC"},
        "DhcpOptionsId": {"Ref": "dopt21c7d043"}
      }
    },

    "FWInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "IamInstanceProfile": {"Ref": "BootstrapInstanceProfile"},
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": { "Fn::FindInMap" : [ "PANFWRegionMap", { "Ref" : "AWS::Region" }, {"Ref": "FWLicenseType"}]},
        "InstanceType": "m4.xlarge",
        "BlockDeviceMappings" :
        [
            {
              "DeviceName" : "/dev/xvda",
              "Ebs" :
              {
                "VolumeType" : "gp2",
                "DeleteOnTermination" : "true",
                "VolumeSize" : "60"
              }
            }
        ],
        "KeyName":  { "Ref" : "ServerKeyName" },
        "Monitoring": "false",
        "Tags": [{ "Key": "Name", "Value": "WP VM-Series Firewall" }],
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": { "Ref": "FWManagementNetworkInterface"},
            "DeviceIndex": 0
          },
          {
            "NetworkInterfaceId": { "Ref": "FWPublicNetworkInterface"},
            "DeviceIndex": 1
          },
          {
            "NetworkInterfaceId": { "Ref": "FWPrivate12NetworkInterface"},
            "DeviceIndex": 2
          },
          {
            "NetworkInterfaceId": { "Ref": "FWPrivate13NetworkInterface"},
            "DeviceIndex": 3
          }
        ],
        "UserData":  { "Fn::Base64" : { "Fn::Join" : ["", [
            "vmseries-bootstrap-aws-s3bucket=",  { "Ref" : "BootstrapBucketName" }
        ]]}}
      },
      "DependsOn": [ "FWPublicNetworkInterface", "FWPrivate12NetworkInterface", "FWPrivate13NetworkInterface", "NewPublicSubnet" ]
    },

    "WPDBServerInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": { "Fn::FindInMap" : [ "UbuntuRegionMap", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "t2.micro",
        "KeyName": { "Ref": "ServerKeyName" },
        "Monitoring": "false",
        "Tags": [{ "Key": "Name", "Value": "WP DB Server 1" }],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "NewDBSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.2.101",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgWideOpen"
              }
            ]
          }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#! /bin/bash\n",

            "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n",
            "echo \"export new_routers='",{"Fn::GetAtt" : [ "FWPrivate13NetworkInterface", "PrimaryPrivateIpAddress" ]},"'\" >> /etc/dhcp/dhclient-enter-hooks.d/aws-default-route\n",
            "ifdown eth0\n",
            "ifup eth0\n",
            "sudo apt-get update -y &&\n",
            "sudo apt-get install -y apache2 php7.0 libapache2-mod-php7.0 &&\n",
            "sudo rm -f /var/www/html/index.html &&\n",
            "sudo wget -O /var/www/html/index.php https://raw.githubusercontent.com/PaloAltoNetworks/aws-alb-sandwich/master/showheaders.php\n"
        ]]}
      }},
      "DependsOn": [ "NewDBSubnet", "sgWideOpen" ]
    },

    "WPWebInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": { "Fn::FindInMap" : [ "UbuntuRegionMap", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "t2.micro",
        "KeyName": { "Ref": "ServerKeyName" },
        "Monitoring": "false",
        "Tags": [{"Key": "Name","Value": "WP Web Server 1"}],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "NewWebSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.1.101",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgWideOpen"
              }
            ]
          }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#! /bin/bash\n",

            "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n",
            "echo \"export new_routers='",{"Fn::GetAtt" : [ "FWPrivate12NetworkInterface", "PrimaryPrivateIpAddress" ]},"'\" >> /etc/dhcp/dhclient-enter-hooks.d/aws-default-route\n",
            "ifdown eth0\n",
            "ifup eth0\n",

            "sudo apt-get update -y &&\n",
            "sudo apt-get install -y apache2 php7.0 libapache2-mod-php7.0 &&\n",
            "sudo rm -f /var/www/html/index.html &&\n",
            "sudo wget -O /var/www/html/index.php https://raw.githubusercontent.com/PaloAltoNetworks/aws-alb-sandwich/master/showheaders.php\n"
          ]]}
        }
      },
      "DependsOn": [ "NewWebSubnet", "sgWideOpen" ]
    }
  },

  "Outputs": {
    "FirewallManagementURL": {
      "Description": "VM-Series management IP",
      "Value": { "Fn::GetAtt" : ["FWManagementNetworkInterface", "PrimaryPrivateIpAddress"] },
    }
  }
}
